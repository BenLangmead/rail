(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    177333,       3577]
NotebookOptionsPosition[    175209,       3507]
NotebookOutlinePosition[    175565,       3523]
CellTagsIndexPosition[    175522,       3520]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This notebook generates spliced-read performance plots for a given sample. \
REQUIRES UNIX-BASED OS. Enter the directory where \
\[OpenCurlyDoubleQuote].perform\[CloseCurlyDoubleQuote] files may be found \
below.\
\>", "Text",
 CellChangeTimes->{{3.61468834029545*^9, 3.614688414174341*^9}, {
  3.614695663533258*^9, 3.6146956773074903`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Set", " ", "Apple", " ", 
    RowBox[{"colors", " ", "--"}], " ", "from", " ", 
    RowBox[{"http", ":"}]}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
       "questions"}], "/", "38722"}], "/", "discrete"}], "-", "colordata", 
    "-", "scheme", "-", "with", "-", "n", "-", "colors"}]}], "*)"}]], "Input",\

 CellChangeTimes->{{3.6148642254523706`*^9, 3.6148642593043623`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"blue", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"17.6", "/", "100"}], ",", 
     RowBox[{"41.6", "/", "100"}], ",", 
     RowBox[{"63.1", "/", "100"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"green", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"34.9", "/", "100"}], ",", 
     RowBox[{"66.7", "/", "100"}], ",", 
     RowBox[{"33.3", "/", "100"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yellow", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"96.9", "/", "100"}], ",", 
     RowBox[{"68.6", "/", "100"}], ",", 
     RowBox[{"20.8", "/", "100"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"red", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"86.3", "/", "100"}], ",", 
     RowBox[{"13.3", "/", "100"}], ",", 
     RowBox[{"19.6", "/", "100"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"purple", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"55.3", "/", "100"}], ",", 
     RowBox[{"27.5", "/", "100"}], ",", 
     RowBox[{"55.7", "/", "100"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"grey", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"55.7", "/", "100"}], ",", 
     RowBox[{"57.3", "/", "100"}], ",", 
     RowBox[{"56.9", "/", "100"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"apple7", "=", 
   RowBox[{"{", 
    RowBox[{
    "blue", ",", "Orange", ",", "red", ",", "yellow", ",", " ", "purple", ",",
      "grey", ",", " ", "green"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.614864230617489*^9, 3.6148642540040073`*^9}, {
  3.614864378001522*^9, 3.614864393548027*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\</Users/anellore/paper_perform\>\"", "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6146883193162327`*^9, 3.6146883227843313`*^9}, {
  3.614688506973755*^9, 3.6146885339885674`*^9}, {3.614764003845975*^9, 
  3.614764010499137*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Select", " ", "sample"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6146895346887503`*^9, 3.614689551413361*^9}, {
  3.614764061914989*^9, 3.614764069214933*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleNames", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<NA18508.1.M_111124_1\>\"", ",", "\"\<NA18861.1.M_120209_2\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6147640375922203`*^9, 3.614764055731573*^9}, {
   3.614805896180131*^9, 3.614805919068861*^9}, 3.61480652836444*^9, {
   3.614807280232489*^9, 3.614807281735111*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NA18508.1.M_111124_1\"\>", 
   ",", "\<\"NA18861.1.M_120209_2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6147641803273363`*^9, 3.614801029919936*^9, 
  3.614807283026064*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Read", " ", "pro", " ", "files", " ", "for", " ", "coverage"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.614800913382023*^9, 3.614800923602627*^9}, 
   3.6148073153506107`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TPMs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"sampleNames", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "~~", "\"\<_sim.pro\>\""}], "]"}], 
      "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"6", ",", "10"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.614800927042028*^9, 3.614800936474309*^9}, {
   3.614800991154695*^9, 3.6148010143124638`*^9}, {3.6148011201351*^9, 
   3.614801125693676*^9}, {3.614801988490994*^9, 3.614801989444631*^9}, 
   3.614802219065983*^9, 3.614802337739377*^9, {3.614802372304603*^9, 
   3.614802372690404*^9}, {3.614803710010294*^9, 3.6148037117728577`*^9}, {
   3.6148072956392097`*^9, 3.6148073110553017`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Compute", " ", "TPMs"}], "*)"}]], "Input",
 CellChangeTimes->{{3.61480197480157*^9, 3.614801982812409*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "1"}], ",", " ", 
    RowBox[{"j", "\[LessEqual]", "2"}], ",", " ", 
    RowBox[{"j", "+=", "1"}], ",", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "\[LessEqual]", "2"}], ",", " ", 
      RowBox[{"i", "+=", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"TPMs", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "i"}], "]"}], "]"}], " ", "=", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TPMs", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "i"}], "]"}], "]"}], " ", "/", " ", 
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"TPMs", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "i"}], "]"}], "]"}], "]"}]}], "]"}], 
        "*", 
        RowBox[{"10", "^", "6"}]}]}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.61480112842453*^9, 3.614801152085025*^9}, {
  3.614801202191655*^9, 3.6148012621146*^9}, {3.614801969150196*^9, 
  3.614802001796749*^9}, {3.614802317245584*^9, 3.6148023329874277`*^9}, {
  3.614807345483192*^9, 3.614807407748106*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortedOriginalTPMs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"TPMs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.614802055108376*^9, 3.61480210659729*^9}, {
  3.614802156345941*^9, 3.614802168459653*^9}, {3.614802525712249*^9, 
  3.6148025437824917`*^9}, {3.614803747712598*^9, 3.614803812185067*^9}, {
  3.614804192474559*^9, 3.614804197546381*^9}, {3.6148074208616867`*^9, 
  3.614807429067707*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortedSimTPMs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"TPMs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.614803782842512*^9, 3.6148038170779963`*^9}, {
  3.614804199226965*^9, 3.614804203178276*^9}, {3.6148074382135353`*^9, 
  3.614807440388204*^9}, {3.6148080938347063`*^9, 3.614808115127981*^9}, {
  3.614808215593738*^9, 3.614808218869499*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TPMPlot", " ", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ListLogLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"sortedOriginalTPMs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "1000"}], "]"}], "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"sortedSimTPMs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "1000"}], "]"}], "]"}], "]"}]}], "}"}], ",",
            " ", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Rank of transcript\>\"", ",", "\"\<TPM\>\""}], 
             "}"}]}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", 
            RowBox[{"{", "\"\<Detailed\>\"", "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "apple7"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<Sample \>\"", "~~", 
               RowBox[{"sampleNames", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "~~", "\"\< (YRI)\>\""}], ",",
               " ", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], ",", " ", 
              RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"FontFamily", "->", "\"\<Palatino\>\""}], ",", " ", 
                RowBox[{"FontSize", "\[Rule]", "18"}], ",", "Black"}], "]"}], 
              ",", " ", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"FontFamily", "->", "\"\<Palatino\>\""}], ",", " ", 
                RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}]}], "}"}]}], 
           ",", " ", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"PointSize", "[", ".007", "]"}]}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", "2"}], "}"}]}], "]"}], "}"}], ",", 
      
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<TPMs for GEUVADIS sample-Flux simulation pairs\>\"", ",", " ", 
         "24", ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Futura\>\""}]}], "]"}]}], ",", 
      
      RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Dashed", ",", "Gray"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"900", ",", "320"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<red\>\"", ",", "\"\<green\>\"", ",", "\"\<blue\>\""}], 
       "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6148085317756*^9, 3.61480855818818*^9}, {
   3.614809121427271*^9, 3.614809137081818*^9}, {3.614809204936338*^9, 
   3.6148092079014893`*^9}, {3.614809283126306*^9, 3.614809315426112*^9}, 
   3.6148093705863028`*^9, {3.614809437932893*^9, 3.6148094576698227`*^9}, {
   3.614810235076109*^9, 3.614810299107307*^9}, {3.614810387569343*^9, 
   3.6148104166715612`*^9}, {3.614810485366068*^9, 3.6148104911512947`*^9}, {
   3.614810521348418*^9, 3.614810540908018*^9}, {3.614810571798313*^9, 
   3.614810575675948*^9}, {3.614810648019709*^9, 3.6148106488928337`*^9}, {
   3.6148108146307993`*^9, 3.614810826930687*^9}, {3.6148109414005337`*^9, 
   3.614810942539094*^9}, {3.614811009741487*^9, 3.614811010353778*^9}, {
   3.6148118063694077`*^9, 3.614811822838273*^9}, {3.614811923981069*^9, 
   3.614811924577829*^9}, {3.614812099071135*^9, 3.614812104229303*^9}, {
   3.614812162325124*^9, 3.614812163657517*^9}, {3.6148123053384237`*^9, 
   3.6148123292340097`*^9}, {3.6148124063407516`*^9, 3.614812478569837*^9}, {
   3.614812621203535*^9, 3.6148126695713787`*^9}, {3.61481270150447*^9, 
   3.614812718300167*^9}, {3.614812949790374*^9, 3.61481295298015*^9}, {
   3.614813003075426*^9, 3.61481300796319*^9}, {3.614813071813151*^9, 
   3.6148130922350492`*^9}, {3.614860646270384*^9, 3.614860717793962*^9}, {
   3.614860748606185*^9, 3.6148608683003407`*^9}, {3.614861024843936*^9, 
   3.614861030690997*^9}, {3.614861062462427*^9, 3.614861121367197*^9}, {
   3.614861174050262*^9, 3.614861198060515*^9}, {3.614861231495226*^9, 
   3.6148613210179663`*^9}, {3.614861351408128*^9, 3.614861392278186*^9}, {
   3.614861683316906*^9, 3.614861685281568*^9}, {3.614861742125536*^9, 
   3.614861743324273*^9}, {3.614861802053234*^9, 3.614861816903236*^9}, {
   3.6148620358689013`*^9, 3.614862035948637*^9}, {3.61486210653266*^9, 
   3.6148621068348846`*^9}, {3.614862369545117*^9, 3.614862372111306*^9}, {
   3.6148625465699883`*^9, 3.614862547966124*^9}, {3.614862626061987*^9, 
   3.614862647076167*^9}, {3.614862787296768*^9, 3.614862789935306*^9}, {
   3.6148628274838963`*^9, 3.6148628601690207`*^9}, {3.614862927744931*^9, 
   3.614862968941784*^9}, {3.614863001855938*^9, 3.614863127710514*^9}, {
   3.6148632966322927`*^9, 3.61486335591092*^9}, {3.614863418461503*^9, 
   3.614863450050435*^9}, {3.61486349202393*^9, 3.614863572048003*^9}, {
   3.614863652083349*^9, 3.614863696500245*^9}, {3.614864300219837*^9, 
   3.614864301127769*^9}, {3.614864359539897*^9, 3.6148643656789913`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[1.6], 
               RGBColor[0.17600000000000002`, 0.41600000000000004`, 0.631]], 
              PointBox[CompressedData["
1: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
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[1.6], 
               RGBColor[0.349, 0.667, 0.33299999999999996`]], 
              PointBox[CompressedData["
1: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
yxQL
               "]]}, {}}}, {}}}, {DisplayFunction -> Identity, GridLines -> {
            Charting`ScaledTickValues[{Log, Exp}], 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, 
          AxesOrigin -> {-0.25409386280110086`, 4.568145942749595}, 
          PlotRange -> {{-0.14391156831212787`, 6.907755278982137}, {
           4.6440315404491415`, 9.348938597821029}}, DisplayFunction -> 
          Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {-0.25409386280110086`, 4.568145942749595}, 
          CoordinatesToolOptions -> {"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& )}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
             FormBox["\"TPM\"", TraditionalForm], None}, {
             FormBox["\"Rank of transcript\"", TraditionalForm], None}}, 
          FrameStyle -> {
            Directive[FontFamily -> "Palatino", FontSize -> 18, 
             GrayLevel[0]], 
            Directive[FontFamily -> "Palatino", FontSize -> 18]}, 
          FrameTicks -> {{
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {
            Charting`ScaledTickValues[{Log, Exp}], 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], Method -> {}, PlotLabel -> FormBox[
            StyleBox[
            "\"Sample NA18508.1.M_111124_1 (YRI)\"", FontFamily -> "Palatino",
              FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          PlotRange -> {{-0.14391156831212787`, 6.907755278982137}, {
           4.6440315404491415`, 9.348938597821029}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledTicks[{Log, Exp}]}}], {192., -116.80842387373012`}, 
        ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], 
       InsetBox[
        GraphicsBox[{{{}, {{{}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[1.6], 
               RGBColor[0.17600000000000002`, 0.41600000000000004`, 0.631]], 
              PointBox[CompressedData["
1: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

               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[1.6], 
               RGBColor[0.349, 0.667, 0.33299999999999996`]], 
              PointBox[CompressedData["
1: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
oJgdWbfG7ewNGRLufP/e3JiHwSUObQm+dSS80xzieZSLAQtXyNaI9ST8mc7/
SHuMweunadWrZEmQPMfqJZ+D4h3IVnNejoTT/lbGk48wOOompD4jT4LcY7xZ
4iGqR5ii9GkFdP9SLe6LWRgMx1eHjG4iwfXBqE1yJgb3UjZb2iqh9Wr6OtDw
AAMp39H7ncorfvRNx9lQlQSbRt0Bc+Tvdhkp1ZtXnPvO/6C62oq9y8UD8raS
ANMDhS73MSD2zJPS6iQ8mxg6FJyO8l/EXfW2Bgl3FbdU3UrD4G1Qby23Fgma
k4VanqkY1BlltQVuJ2Fmv9EFNeSiWUWLCW20/ic+bwpPQfXjQtehYzokvOxc
OLYf2TRoufX9DhSPGcHKjmQMZpXZ63R3kVD3efX3u8hPbPerFeqSYHxi5nV1
EgYP3JXWrN1Dgkc5a8O6RAxMjtCuxO8lQWTD2c/CdzCgakzcWfVJkA70KexK
wOB9h0GL5z50/Zdkze2RD9vZ5g7sJ8G3c3Lf5VsYyDWPchkaknD9IJ+q9E0M
+qV2DZUeIKF7dNDxcTy6P+Z36usOkrDjUg0+H4dB8MMvArHGJJCeCumtsRic
/DfkuGSC1ofQp24i67jKqJ8wI4HpaIfb0A1U30XZotvNSZCSVExXRM6u6bXT
siDhSE4imFzDYP8rrsIMSxI+qqaG0pEF2IYi+a1JSKx+77E+BgM/5aoB38Mk
HB851/4kGvvv93tJYEgJL3she3QvCOw5uuKa5xzfH9uSoHLto8vrqxjs0zin
R7MnIU7h6KRoFAbmKgUbAo6RcCvv5+yDKxgYrWa+2u+wYo3WV2d2OaH7vfN7
+gSywnbdvixnEmIFunueR2LQnjPSyHOChA5XreMREWg/iS1qnz6J7i/4dsmp
cFTPNHvU2k+RcGYjt98m5EyzzmebXVccZLu76JbbijcsnNOecyeBReCNXkQY
BlPu7wysPEgwv5L3WT0YPZ9zfbDUk4T6h8/KxgIxCNCnL5FeJJgGEidVkH2i
n6YEeJPQU7gqafo8qn9OJW8/+pCw9s3V6razaD1PnD231Q/lQ/ze9njkid59
hTf9SRh5aN9ngTySf85vKmDFMUFHqw6eI2GAtfaeij/Kr3jdW7nnSQjhcmup
9kX5N3hhavWFFfvwHO1xukiC43H6/SRvDFKOqeyvDCIhPUaSaQ2y1cj+PaIh
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
LaTB/wcsoBfV
               "]]}, {}}}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {
            Charting`ScaledTickValues[{Log, Exp}], 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, 
          AxesOrigin -> {-0.25409386280110086`, 4.641648838609794}, 
          PlotRange -> {{-0.14391156831212787`, 6.907755278982137}, {
           4.711454834124684, 9.039426556047855}}, DisplayFunction -> 
          Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {-0.25409386280110086`, 4.641648838609794}, 
          CoordinatesToolOptions -> {"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& )}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
             FormBox["\"TPM\"", TraditionalForm], None}, {
             FormBox["\"Rank of transcript\"", TraditionalForm], None}}, 
          FrameStyle -> {
            Directive[FontFamily -> "Palatino", FontSize -> 18, 
             GrayLevel[0]], 
            Directive[FontFamily -> "Palatino", FontSize -> 18]}, 
          FrameTicks -> {{
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {
             Charting`ScaledTicks[{Log, Exp}], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {
            Charting`ScaledTickValues[{Log, Exp}], 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], Method -> {}, PlotLabel -> FormBox[
            StyleBox[
            "\"Sample NA18861.1.M_120209_2 (YRI)\"", FontFamily -> "Palatino",
              FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          PlotRange -> {{-0.14391156831212787`, 6.907755278982137}, {
           4.711454834124684, 9.039426556047855}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledTicks[{Log, Exp}]}}], {576., -116.80842387373012`}, 
        ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}}, {
      Directive[Antialiasing -> False], 
      Directive[
       Dashing[{Small, Small}], 
       GrayLevel[0.5]], {{
        LineBox[{{0, 0}, {0, -233.61684774746024`}}]}, {
        LineBox[{{384., 0}, {384., -233.61684774746024`}}]}, {
        LineBox[{{768., 0}, {768., -233.61684774746024`}}]}, {
        LineBox[{{0, 0}, {384., 0}}]}, {
        LineBox[{{384., 0}, {768., 0}}]}, {
        LineBox[{{0, -233.61684774746024`}, {384., -233.61684774746024`}}]}, {
       
        LineBox[{{384., -233.61684774746024`}, {
         768., -233.61684774746024`}}]}}}}, ImageSize -> {900, 320}, 
    PlotRangePadding -> {6, 5}, ContentSelectable -> True, PlotLabel -> 
    FormBox[
      StyleBox[
      "\"TPMs for GEUVADIS sample-Flux simulation pairs\"", 24, FontFamily -> 
       "Futura", StripOnInput -> False], TraditionalForm], 
    ImageSize -> {900, 320}],FormBox[
    FormBox[
     TemplateBox[{"\"red\"", "\"green\"", "\"blue\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.614861080323161*^9, 3.614861097980853*^9}, 
   3.614861139950735*^9, {3.6148611764712887`*^9, 3.614861199638278*^9}, 
   3.61486125730781*^9, {3.614861293795326*^9, 3.614861322011919*^9}, 
   3.614861393395083*^9, 3.614861686387167*^9, 3.6148617446296883`*^9, {
   3.614862017212943*^9, 3.6148620370496264`*^9}, {3.6148620946733017`*^9, 
   3.6148621079902143`*^9}, 3.6148623736402473`*^9, 3.614862549307988*^9, {
   3.614862625242619*^9, 3.614862648262903*^9}, 3.614862791085952*^9, {
   3.614862828963181*^9, 3.614862861213051*^9}, {3.6148629300203114`*^9, 
   3.614862970076736*^9}, {3.614863004030863*^9, 3.6148630600407457`*^9}, {
   3.6148630915774193`*^9, 3.6148631291291*^9}, 3.614863306536104*^9, {
   3.614863336724595*^9, 3.614863357015676*^9}, {3.6148634209157887`*^9, 
   3.614863451159012*^9}, {3.614863493413622*^9, 3.614863557016735*^9}, 
   3.6148636991463118`*^9, 3.614864303237626*^9, 3.614864367904335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.614864103854065*^9, 3.614864113629257*^9}, {
  3.614864151684977*^9, 3.614864175953874*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ColorDataFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Index: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["7",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Colors: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["11",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Palette: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[{
                 {RGBColor[
                  0.5019607843137255, 0.4980392156862745, 0.4980392156862745],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{1, 0}, Offset[{-1, -1}, {2, 1}]]}, 
                 {RGBColor[
                  0.796078431372549, 0.5137254901960784, 0.4980392156862745], 
                  EdgeForm[Opacity[0.1]], 
                  RectangleBox[{2, 0}, Offset[{-1, -1}, {3, 1}]]}, 
                 {RGBColor[
                  0.40784313725490196`, 0.24313725490196078`, 
                   0.20784313725490197`], EdgeForm[Opacity[0.1]], 
                  RectangleBox[{3, 0}, Offset[{-1, -1}, {4, 1}]]}, 
                 {RGBColor[
                  0.803921568627451, 0.6862745098039216, 0.6039215686274509], 
                  EdgeForm[Opacity[0.1]], 
                  RectangleBox[{4, 0}, Offset[{-1, -1}, {5, 1}]]}, 
                 {RGBColor[0.28627450980392155`, 0.23921568627450981`, 0.2], 
                  EdgeForm[Opacity[0.1]], 
                  RectangleBox[{5, 0}, Offset[{-1, -1}, {6, 1}]]}, 
                 {RGBColor[
                  0.7568627450980392, 0.7058823529411765, 0.5764705882352941],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{6, 0}, Offset[{-1, -1}, {7, 1}]]}, 
                 {RGBColor[
                  0.6980392156862745, 0.7254901960784313, 0.5647058823529412],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{7, 0}, Offset[{-1, -1}, {8, 1}]]}, 
                 {RGBColor[
                  0.4588235294117647, 0.5764705882352941, 0.5058823529411764],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{8, 0}, Offset[{-1, -1}, {9, 1}]]}, 
                 {RGBColor[
                  0.5725490196078431, 0.6313725490196078, 0.6705882352941176],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{9, 0}, Offset[{-1, -1}, {10, 1}]]}, 
                 {RGBColor[
                  0.3411764705882353, 0.34509803921568627`, 
                   0.34901960784313724`], EdgeForm[Opacity[0.1]], 
                  RectangleBox[{10, 0}, Offset[{-1, -1}, {11, 1}]]}, 
                 {RGBColor[
                  0.2627450980392157, 0.3411764705882353, 0.4470588235294118],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{11, 0}, Offset[{-1, -1}, {12, 1}]]}},
                AspectRatio->NCache[
                  Rational[1, 10], 0.1],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRangePadding->None],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Index: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["7",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Colors: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["11",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Palette: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[{
                 {RGBColor[
                  0.5019607843137255, 0.4980392156862745, 0.4980392156862745],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{1, 0}, Offset[{-1, -1}, {2, 1}]]}, 
                 {RGBColor[
                  0.796078431372549, 0.5137254901960784, 0.4980392156862745], 
                  EdgeForm[Opacity[0.1]], 
                  RectangleBox[{2, 0}, Offset[{-1, -1}, {3, 1}]]}, 
                 {RGBColor[
                  0.40784313725490196`, 0.24313725490196078`, 
                   0.20784313725490197`], EdgeForm[Opacity[0.1]], 
                  RectangleBox[{3, 0}, Offset[{-1, -1}, {4, 1}]]}, 
                 {RGBColor[
                  0.803921568627451, 0.6862745098039216, 0.6039215686274509], 
                  EdgeForm[Opacity[0.1]], 
                  RectangleBox[{4, 0}, Offset[{-1, -1}, {5, 1}]]}, 
                 {RGBColor[0.28627450980392155`, 0.23921568627450981`, 0.2], 
                  EdgeForm[Opacity[0.1]], 
                  RectangleBox[{5, 0}, Offset[{-1, -1}, {6, 1}]]}, 
                 {RGBColor[
                  0.7568627450980392, 0.7058823529411765, 0.5764705882352941],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{6, 0}, Offset[{-1, -1}, {7, 1}]]}, 
                 {RGBColor[
                  0.6980392156862745, 0.7254901960784313, 0.5647058823529412],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{7, 0}, Offset[{-1, -1}, {8, 1}]]}, 
                 {RGBColor[
                  0.4588235294117647, 0.5764705882352941, 0.5058823529411764],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{8, 0}, Offset[{-1, -1}, {9, 1}]]}, 
                 {RGBColor[
                  0.5725490196078431, 0.6313725490196078, 0.6705882352941176],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{9, 0}, Offset[{-1, -1}, {10, 1}]]}, 
                 {RGBColor[
                  0.3411764705882353, 0.34509803921568627`, 
                   0.34901960784313724`], EdgeForm[Opacity[0.1]], 
                  RectangleBox[{10, 0}, Offset[{-1, -1}, {11, 1}]]}, 
                 {RGBColor[
                  0.2627450980392157, 0.3411764705882353, 0.4470588235294118],
                   EdgeForm[Opacity[0.1]], 
                  RectangleBox[{11, 0}, Offset[{-1, -1}, {12, 1}]]}},
                AspectRatio->NCache[
                  Rational[1, 10], 0.1],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRangePadding->None],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Indexed\"\>",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Alternate name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"ArtDeco1\"\>",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  ColorDataFunction[7, "Indexed", {1, 11, 1}, Part[{
     RGBColor[0.5019607843137255, 0.4980392156862745, 0.4980392156862745], 
     RGBColor[0.796078431372549, 0.5137254901960784, 0.4980392156862745], 
     RGBColor[
     0.40784313725490196`, 0.24313725490196078`, 0.20784313725490197`], 
     RGBColor[0.803921568627451, 0.6862745098039216, 0.6039215686274509], 
     RGBColor[0.28627450980392155`, 0.23921568627450981`, 0.2], 
     RGBColor[0.7568627450980392, 0.7058823529411765, 0.5764705882352941], 
     RGBColor[0.6980392156862745, 0.7254901960784313, 0.5647058823529412], 
     RGBColor[0.4588235294117647, 0.5764705882352941, 0.5058823529411764], 
     RGBColor[0.5725490196078431, 0.6313725490196078, 0.6705882352941176], 
     RGBColor[0.3411764705882353, 0.34509803921568627`, 0.34901960784313724`], 
     RGBColor[0.2627450980392157, 0.3411764705882353, 0.4470588235294118]}, 
    Mod[
     Floor[#], 11, 1]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.614864165583179*^9, 3.614864176192606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", "\"\<NeonColors\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.614863982869931*^9, 3.61486398503132*^9}, {
  3.6148640451101847`*^9, 3.614864058133066*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ColorDataFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"NeonColors\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1: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
                 
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"NeonColors\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1: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
                 
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Domain: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Gradients\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  ColorDataFunction[
  "NeonColors", "Gradients", {0, 1}, Blend["NeonColors", #]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.614864052009533*^9, 3.6148640583309593`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SwatchLegend", "[", 
  RowBox[{"3", ",", 
   RowBox[{"Range", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614861888381493*^9, 3.6148619305884953`*^9}}],

Cell[BoxData[
 TemplateBox[{"1","2","3","4"},
  "SwatchLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0., 0., 0.]], 
                RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[
                 0.996078431372549, 0.3607843137254902, 
                  0.027450980392156862`]], 
                RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[
                 0.996078431372549, 0.9882352941176471, 0.03529411764705882]], 
                RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
              GraphicsBox[{
                Directive[
                 EdgeForm[
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]]], 
                 PointSize[0.5], 
                 AbsoluteThickness[1.6], 
                 RGBColor[
                 0.5411764705882353, 0.7137254901960784, 
                  0.027450980392156862`]], 
                RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
               AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
               None, ImagePadding -> Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              RowBox[{
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0., 0., 0.], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> None,
                  PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "\[InvisibleSpace]"}], "RGBColor[0., 0., 0.]"], Appearance -> 
             None, BaseStyle -> {}, BaselinePosition -> Baseline, 
             DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[0., 0., 0.], Editable -> False, Selectable -> False], 
           ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              RowBox[{
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                   0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[
                  0.6640522875816994, 0.24052287581699347`, 
                   0.018300653594771243`], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "\[InvisibleSpace]"}], 
              "RGBColor[0.996078431372549, 0.3607843137254902, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
             BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
             ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.996078431372549, 0.3607843137254902, 
                   0.027450980392156862`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
            Editable -> False, Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              RowBox[{
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                   0.996078431372549, 0.9882352941176471, 
                    0.03529411764705882], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[
                  0.6640522875816994, 0.6588235294117648, 
                   0.023529411764705882`], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "\[InvisibleSpace]"}], 
              "RGBColor[0.996078431372549, 0.9882352941176471, \
0.03529411764705882]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.996078431372549, 0.9882352941176471, 0.03529411764705882]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[
            0.996078431372549, 0.9882352941176471, 0.03529411764705882], 
            Editable -> False, Selectable -> False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              RowBox[{
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                   0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[
                  0.3607843137254902, 0.4758169934640523, 
                   0.018300653594771243`], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "\[InvisibleSpace]"}], 
              "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
             BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
             ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5411764705882353, 0.7137254901960784, 
                   0.027450980392156862`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            RGBColor[
            0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
            Editable -> False, Selectable -> False]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",\

 CellChangeTimes->{{3.614861902164572*^9, 3.6148619313589773`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{
   RowBox[{"sampleCoverage", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
   RowBox[{"sampleCoverage", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6148012986851177`*^9, 3.6148013121279182`*^9}}],

Cell[BoxData["0.8858031704529815`"], "Output",
 CellChangeTimes->{3.614801312711679*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleCoverage", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", " ", 
    RowBox[{"{", 
     RowBox[{"6", ",", "9"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.61480103762407*^9, 3.6148010988224897`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"4", ",", "3.4999539756052206`*^-7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1.9999737003458404`*^-7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           TemplateBox[{"183023"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1.4999802752593804`*^-7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "5.499927675951061`*^-7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "2.4999671254323005`*^-7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "1.4999802752593804`*^-7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "3.4999539756052206`*^-7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.`"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 7, 21798344468199697811, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 7, 21798344468199697811, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 7, 21798344468199697811, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[7]]], "Output",
 CellChangeTimes->{3.6148010487035723`*^9, 3.6148011048101997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"performanceFiles", " ", "=", " ", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"FileNames", "[", "\"\<*\>\"", "]"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"StringFreeQ", "[", 
         RowBox[{"#", ",", "\"\<summary\>\""}], "]"}], "&"}], ")"}]}], "]"}], 
    ",", " ", 
    RowBox[{
     RowBox[{"StringFreeQ", "[", 
      RowBox[{"#", ",", "sampleName"}], "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.61468963284396*^9, 3.614689637514162*^9}, {
  3.6146922002805157`*^9, 3.614692205281303*^9}, {3.6146923297585697`*^9, 
  3.614692342985044*^9}, {3.6147640845463057`*^9, 3.614764095938024*^9}, {
  3.6147641600141373`*^9, 3.614764307186528*^9}, {3.6147644010123463`*^9, 
  3.614764419431286*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NA18508.1.M_111124_1.rail.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.ann_paired_1pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.ann_paired_2pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.ann_single_1pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.ann_single_2pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.noann_paired_1pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.noann_paired_2pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.noann_single_1pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.star.noann_single_2pass.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.tophat.ann_paired.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.tophat.ann_single.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.tophat.noann_paired.perform\"\>", 
   ",", "\<\"NA18508.1.M_111124_1.tophat.noann_single.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.rail.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.ann_paired_1pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.ann_paired_2pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.ann_single_1pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.ann_single_2pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.noann_paired_1pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.noann_paired_2pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.noann_single_1pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.star.noann_single_2pass.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.tophat.ann_paired.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.tophat.ann_single.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.tophat.noann_paired.perform\"\>", 
   ",", "\<\"NA18861.1.M_120209_2.tophat.noann_single.perform\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6146895541243267`*^9, 3.6146896382718487`*^9, {3.6146921985543222`*^9, 
   3.614692205851905*^9}, {3.614692330694903*^9, 3.614692347867094*^9}, 
   3.614694680892037*^9, 3.614695283439834*^9, 3.614764013712985*^9, {
   3.614764176969034*^9, 3.6147641817661667`*^9}, 3.614764234383276*^9, {
   3.61476430021061*^9, 3.614764309089349*^9}, 3.614764421889225*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"verboseNameRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.rail.perform\>\""}], "\[Rule]", 
      "\"\<Rail-RNA\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.star.ann_paired_1pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 1-pass paired ann\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.star.ann_paired_2pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 2-pass paired ann\>\""}], ",", " ", 
     RowBox[{
      RowBox[{
      "sampleName", "~~", "\"\<.star.noann_paired_1pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 1-pass paired\>\""}], ",", " ", 
     RowBox[{
      RowBox[{
      "sampleName", "~~", "\"\<.star.noann_paired_2pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 2-pass paired\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.star.ann_single_1pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 1-pass single ann\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.star.ann_single_2pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 2-pass single ann\>\""}], ",", " ", 
     RowBox[{
      RowBox[{
      "sampleName", "~~", "\"\<.star.noann_single_1pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 1-pass single\>\""}], ",", " ", 
     RowBox[{
      RowBox[{
      "sampleName", "~~", "\"\<.star.noann_single_2pass.perform\>\""}], 
      "\[Rule]", "\"\<STAR 2-pass single\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.tophat.ann_paired.perform\>\""}], 
      "\[Rule]", "\"\<TopHat paired ann\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.tophat.ann_single.perform\>\""}], 
      "\[Rule]", "\"\<TopHat single ann\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.tophat.noann_paired.perform\>\""}], 
      "\[Rule]", "\"\<TopHat paired\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sampleName", "~~", "\"\<.tophat.noann_single.perform\>\""}], 
      "\[Rule]", "\"\<TopHat single\>\""}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.614692669327569*^9, 3.6146928329680157`*^9}, {
  3.614693018840515*^9, 3.614693027263464*^9}, {3.614693064383621*^9, 
  3.614693247610382*^9}, {3.614694685247636*^9, 3.61469468684437*^9}, {
  3.614764442432783*^9, 3.614764581110149*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPosition", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Position", "[", 
    RowBox[{"performanceFiles", ",", 
     RowBox[{"s_String", "/;", 
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"s", ",", "x"}], "]"}]}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.614692307169426*^9, 3.6146923168701963`*^9}, {
  3.6146924483988123`*^9, 3.614692462137607*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "parameter", " ", "varied", " ", "here", " ", "is", " ", "upper", " ", 
   "bound", " ", "on", " ", "lowest", " ", "true", " ", "coverage", " ", 
   RowBox[{"(", 
    RowBox[{
    "\"\<true\>\"", " ", "as", " ", "in", " ", 
     "\"\<from simulated alignments\>\""}], ")"}], " ", "from", " ", "among", 
   " ", "introns", " ", "overlapped", " ", "by", " ", "read"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.614700289342494*^9, 3.614700372186005*^9}, {
  3.614764706193921*^9, 3.6147647524779463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"statsAtTrueCoverage", "[", 
   RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"StringReplace", "[", 
     RowBox[{
     "\"\<!awk '{for (i = 1; i <= threshold; i++){ if ($5 == i) {rel[i] += \
$1; ret[i] += $2; if ($1 == $2) {relret[i] += $1}}}} END {for (i = 1; i <= \
threshold; i++) {printf \
\\\"%d\\\\t%d\\\\t%d\\\\n\\\",rel[i],ret[i],relret[i]}}' filename\>\"", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<filename\>\"", "\[Rule]", "x"}], ",", 
        RowBox[{"\"\<threshold\>\"", "\[Rule]", 
         RowBox[{"ToString", "[", "y", "]"}]}]}], "}"}]}], "]"}], ",", " ", 
    "\"\<TSV\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.614698589784252*^9, 3.6146986441191883`*^9}, {
  3.614698683231176*^9, 3.614698808522118*^9}, {3.614698882732913*^9, 
  3.614698883340521*^9}, {3.614764629278438*^9, 3.614764654691616*^9}, {
  3.614764694626893*^9, 3.614764696955711*^9}, {3.614764795877472*^9, 
  3.614764861009675*^9}, {3.6147648998144627`*^9, 3.614764900518454*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"statsAboveRetrievedCoverage", "[", 
   RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"StringReplace", "[", 
     RowBox[{
     "\"\<!awk '{for (i = 1; i <= threshold; i++){ if ($8 >= i) {rel[i] += \
$1; ret[i] += $2; if ($1 == $2) {relret[i] += $1}}}} END {for (i = 1; i <= \
threshold; i++) {printf \
\\\"%d\\\\t%d\\\\t%d\\\\n\\\",rel[i],ret[i],relret[i]}}' filename\>\"", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<filename\>\"", "\[Rule]", "x"}], ",", 
        RowBox[{"\"\<threshold\>\"", "\[Rule]", 
         RowBox[{"ToString", "[", "y", "]"}]}]}], "}"}]}], "]"}], ",", " ", 
    "\"\<TSV\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6147646640926323`*^9, 3.61476468335625*^9}, {
  3.6147649234497766`*^9, 3.614764935271447*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Up", " ", "to", " ", "coverage", " ", "100", " ", "should", " ", "be", " ",
    "enough", " ", "to", " ", "get", " ", "good", " ", "plots"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6147002558377037`*^9, 3.614700280438449*^9}, {
  3.614765165334991*^9, 3.6147651828915977`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"allTrueStats", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"statsAtTrueCoverage", "[", 
       RowBox[{"#", ",", " ", "100"}], "]"}], "&"}], ")"}], "/@", 
    "performanceFiles"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.614700192789041*^9, 3.614700220123528*^9}, {
  3.61470038620497*^9, 3.614700416145822*^9}, {3.614765174766838*^9, 
  3.6147652086847763`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"allRetrieved", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"statsAboveRetrievedCoverage", "[", 
       RowBox[{"#", ",", " ", "100"}], "]"}], "&"}], ")"}], "/@", 
    "performanceFiles"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6147003915425673`*^9, 3.614700418024674*^9}, {
  3.6147651860136147`*^9, 3.6147652116454897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"recallPrecisionFromStats", "[", "x_", "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", "/", " ", 
      RowBox[{"x", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", "/", " ", 
      RowBox[{"x", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.614698052695044*^9, 3.614698082966147*^9}, {
  3.61469812162668*^9, 3.614698158836108*^9}, {3.61469821767242*^9, 
  3.614698294378663*^9}, {3.6146984875125647`*^9, 3.614698499817668*^9}, {
  3.614699781624278*^9, 3.614699807325533*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"recallPrecisionFromStats", "/@", "mystats"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614699068842258*^9, 3.614699072994712*^9}, {
  3.614699639477173*^9, 3.61469969121904*^9}, {3.614699815576055*^9, 
  3.6146998170058937`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
YfmkT0kuz2JpQOYnjQz/AK/1R60=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5448039582498896, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{724.35546875, Automatic},
  Method->{},
  PlotRange->{{0.5495007819078551, 0.8500974960176603}, {
    0, 0.9610913086315311}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.614699073888584*^9, 3.614699081760358*^9}, {
   3.6146996464191227`*^9, 3.61469969152849*^9}, 
   3.61469981774984*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]]
},
WindowSize->{1145, 695},
WindowMargins->{{Automatic, -15}, {Automatic, 29}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 352, 7, 49, "Text"],
Cell[913, 29, 521, 14, 28, "Input"],
Cell[1437, 45, 1650, 50, 131, "Input"],
Cell[3090, 97, 292, 6, 28, "Input"],
Cell[3385, 105, 201, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[3611, 113, 357, 8, 28, "Input"],
Cell[3971, 123, 222, 5, 28, "Output"]
}, Open  ]],
Cell[4208, 131, 219, 5, 28, "Input"],
Cell[4430, 138, 936, 23, 28, "Input"],
Cell[5369, 163, 148, 3, 28, "Input"],
Cell[5520, 168, 1400, 37, 28, "Input"],
Cell[6923, 207, 779, 19, 28, "Input"],
Cell[7705, 228, 738, 18, 28, "Input"],
Cell[CellGroupData[{
Cell[8468, 250, 5927, 116, 182, "Input"],
Cell[14398, 368, 94524, 1636, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108959, 2009, 177, 3, 28, "Input"],
Cell[109139, 2014, 10906, 248, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120082, 2267, 195, 3, 28, "Input"],
Cell[120280, 2272, 11472, 249, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131789, 2526, 189, 4, 28, "Input"],
Cell[131981, 2532, 12669, 269, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144687, 2806, 352, 9, 28, "Input"],
Cell[145042, 2817, 88, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145167, 2823, 239, 6, 28, "Input"],
Cell[145409, 2831, 9890, 253, 137, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155336, 3089, 807, 19, 28, "Input"],
Cell[156146, 3110, 2240, 34, 233, "Output"]
}, Open  ]],
Cell[158401, 3147, 2420, 51, 216, "Input"],
Cell[160824, 3200, 466, 12, 28, "Input"],
Cell[161293, 3214, 547, 12, 46, "Input"],
Cell[161843, 3228, 1093, 23, 131, "Input"],
Cell[162939, 3253, 861, 20, 131, "Input"],
Cell[163803, 3275, 325, 7, 28, "Input"],
Cell[164131, 3284, 419, 11, 28, "Input"],
Cell[164553, 3297, 393, 10, 28, "Input"],
Cell[164949, 3309, 816, 21, 46, "Input"],
Cell[CellGroupData[{
Cell[165790, 3334, 348, 7, 28, "Input"],
Cell[166141, 3343, 9052, 161, 463, 3014, 61, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

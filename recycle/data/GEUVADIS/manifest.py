"""
manifest.py

Make a Myrna-style MANIFEST file for the GEUVADIS project.
"""

import sys
import string
import argparse

parser = argparse.ArgumentParser(description=\
    'Make a manifest file for the GEUVADIS project.')
parser.add_argument(\
    '--ena', type=str, required=True, help='ena.text file from ArrayExpress')
parser.add_argument(\
    '--exclude-mate2', action='store_const', const=True, default=False,
    help='Remove all the mate-2 URLs')

args = parser.parse_args()

srrs, srss = set(), set()

print "# Generated by %s" % ' '.join(sys.argv)

with open(args.ena) as fh:
    for ln in fh:
        ln = ln.rstrip()
        toks = string.split(ln, '\t')
        if toks[0] == 'study_accession':
            continue
        name = '_'.join(toks[:5]) + '-1-1'
        srr = toks[4]
        srrs.add(srr)
        srs = toks[2]
        srss.add(srs)
        fastqs = toks[8]
        if fastqs.count(';') == 1:
            # Paired-end:
            m1, m2 = string.split(fastqs, ';')
            m1, m2 = 'ftp://' + m1, 'ftp://' + m2
            if args.exclude_mate2:
                print '\t'.join([m1, '0', name])
            else:
                print '\t'.join([m1, '0', m2, '0', name])
        elif fastqs.count(';') == 2:
            # Paired-end and unpaired
            unp, m1, m2 = string.split(fastqs, ';')
            unp, m1, m2 = 'ftp://' + unp, 'ftp://' + m1, 'ftp://' + m2
            if args.exclude_mate2:
                print '\t'.join([m1, '0', name])
            else:
                print '\t'.join([m1, '0', m2, '0', name])
            print '\t'.join([unp, '0', name])
        else:
            unp = fastqs
            unp = 'ftp://' + unp
            print '\t'.join([unp, '0', name])

print >> sys.stderr, 'Found %d SRSs' % len(srss)
print >> sys.stderr, 'Found %d SRRs' % len(srrs)
